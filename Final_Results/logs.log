2024-04-18 12:20:37,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:20:37,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:20:37,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:20:37,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-18 12:20:39,226:INFO:PyCaret ClassificationExperiment
2024-04-18 12:20:39,226:INFO:Logging name: clf-default-name
2024-04-18 12:20:39,226:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-18 12:20:39,226:INFO:version 3.3.0
2024-04-18 12:20:39,226:INFO:Initializing setup()
2024-04-18 12:20:39,226:INFO:self.USI: 837b
2024-04-18 12:20:39,226:INFO:self._variable_keys: {'log_plots_param', 'y_test', 'fold_generator', 'idx', 'X_test', 'seed', 'fix_imbalance', 'target_param', 'X_train', 'memory', 'gpu_n_jobs_param', 'logging_param', 'USI', 'n_jobs_param', 'pipeline', 'y', 'fold_shuffle_param', 'y_train', '_available_plots', 'exp_name_log', 'data', 'exp_id', 'X', 'gpu_param', 'is_multiclass', 'html_param', 'fold_groups_param', '_ml_usecase'}
2024-04-18 12:20:39,226:INFO:Checking environment
2024-04-18 12:20:39,227:INFO:python_version: 3.9.18
2024-04-18 12:20:39,227:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2024-04-18 12:20:39,227:INFO:machine: AMD64
2024-04-18 12:20:39,227:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-18 12:20:39,229:INFO:Memory: svmem(total=34210226176, available=17792487424, percent=48.0, used=16417738752, free=17792487424)
2024-04-18 12:20:39,229:INFO:Physical Core: 4
2024-04-18 12:20:39,229:INFO:Logical Core: 8
2024-04-18 12:20:39,229:INFO:Checking libraries
2024-04-18 12:20:39,229:INFO:System:
2024-04-18 12:20:39,229:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2024-04-18 12:20:39,229:INFO:executable: c:\Users\stang\miniconda3\envs\tf2\python.exe
2024-04-18 12:20:39,229:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-18 12:20:39,229:INFO:PyCaret required dependencies:
2024-04-18 12:20:39,279:INFO:                 pip: 24.0
2024-04-18 12:20:39,279:INFO:          setuptools: 68.2.2
2024-04-18 12:20:39,279:INFO:             pycaret: 3.3.0
2024-04-18 12:20:39,279:INFO:             IPython: 8.18.1
2024-04-18 12:20:39,279:INFO:          ipywidgets: 8.1.2
2024-04-18 12:20:39,279:INFO:                tqdm: 4.66.2
2024-04-18 12:20:39,279:INFO:               numpy: 1.26.4
2024-04-18 12:20:39,279:INFO:              pandas: 2.1.4
2024-04-18 12:20:39,279:INFO:              jinja2: 3.1.3
2024-04-18 12:20:39,279:INFO:               scipy: 1.11.4
2024-04-18 12:20:39,279:INFO:              joblib: 1.3.2
2024-04-18 12:20:39,279:INFO:             sklearn: 1.4.1.post1
2024-04-18 12:20:39,279:INFO:                pyod: 1.1.3
2024-04-18 12:20:39,279:INFO:            imblearn: 0.12.0
2024-04-18 12:20:39,279:INFO:   category_encoders: 2.6.3
2024-04-18 12:20:39,279:INFO:            lightgbm: 4.3.0
2024-04-18 12:20:39,279:INFO:               numba: 0.59.1
2024-04-18 12:20:39,279:INFO:            requests: 2.31.0
2024-04-18 12:20:39,279:INFO:          matplotlib: 3.8.3
2024-04-18 12:20:39,279:INFO:          scikitplot: 0.3.7
2024-04-18 12:20:39,279:INFO:         yellowbrick: 1.5
2024-04-18 12:20:39,279:INFO:              plotly: 5.20.0
2024-04-18 12:20:39,279:INFO:    plotly-resampler: Not installed
2024-04-18 12:20:39,279:INFO:             kaleido: 0.2.1
2024-04-18 12:20:39,279:INFO:           schemdraw: 0.15
2024-04-18 12:20:39,279:INFO:         statsmodels: 0.14.1
2024-04-18 12:20:39,279:INFO:              sktime: 0.27.0
2024-04-18 12:20:39,279:INFO:               tbats: 1.1.3
2024-04-18 12:20:39,279:INFO:            pmdarima: 2.0.4
2024-04-18 12:20:39,279:INFO:              psutil: 5.9.8
2024-04-18 12:20:39,279:INFO:          markupsafe: 2.1.5
2024-04-18 12:20:39,280:INFO:             pickle5: Not installed
2024-04-18 12:20:39,280:INFO:         cloudpickle: 3.0.0
2024-04-18 12:20:39,280:INFO:         deprecation: 2.1.0
2024-04-18 12:20:39,280:INFO:              xxhash: 3.4.1
2024-04-18 12:20:39,280:INFO:           wurlitzer: Not installed
2024-04-18 12:20:39,280:INFO:PyCaret optional dependencies:
2024-04-18 12:20:39,291:INFO:                shap: Not installed
2024-04-18 12:20:39,291:INFO:           interpret: Not installed
2024-04-18 12:20:39,291:INFO:                umap: Not installed
2024-04-18 12:20:39,291:INFO:     ydata_profiling: Not installed
2024-04-18 12:20:39,291:INFO:  explainerdashboard: Not installed
2024-04-18 12:20:39,291:INFO:             autoviz: Not installed
2024-04-18 12:20:39,291:INFO:           fairlearn: Not installed
2024-04-18 12:20:39,291:INFO:          deepchecks: Not installed
2024-04-18 12:20:39,291:INFO:             xgboost: Not installed
2024-04-18 12:20:39,291:INFO:            catboost: Not installed
2024-04-18 12:20:39,291:INFO:              kmodes: Not installed
2024-04-18 12:20:39,291:INFO:             mlxtend: Not installed
2024-04-18 12:20:39,291:INFO:       statsforecast: Not installed
2024-04-18 12:20:39,291:INFO:        tune_sklearn: Not installed
2024-04-18 12:20:39,291:INFO:                 ray: Not installed
2024-04-18 12:20:39,291:INFO:            hyperopt: Not installed
2024-04-18 12:20:39,291:INFO:              optuna: 3.6.1
2024-04-18 12:20:39,291:INFO:               skopt: Not installed
2024-04-18 12:20:39,291:INFO:              mlflow: Not installed
2024-04-18 12:20:39,291:INFO:              gradio: Not installed
2024-04-18 12:20:39,291:INFO:             fastapi: Not installed
2024-04-18 12:20:39,291:INFO:             uvicorn: Not installed
2024-04-18 12:20:39,292:INFO:              m2cgen: Not installed
2024-04-18 12:20:39,292:INFO:           evidently: Not installed
2024-04-18 12:20:39,292:INFO:               fugue: Not installed
2024-04-18 12:20:39,292:INFO:           streamlit: Not installed
2024-04-18 12:20:39,292:INFO:             prophet: Not installed
2024-04-18 12:20:39,292:INFO:None
2024-04-18 12:20:39,292:INFO:Set up data.
2024-04-18 12:20:39,634:INFO:Set up folding strategy.
2024-04-18 12:20:53,611:INFO:PyCaret ClassificationExperiment
2024-04-18 12:20:53,611:INFO:Logging name: clf-default-name
2024-04-18 12:20:53,611:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-18 12:20:53,611:INFO:version 3.3.0
2024-04-18 12:20:53,611:INFO:Initializing setup()
2024-04-18 12:20:53,611:INFO:self.USI: 2751
2024-04-18 12:20:53,611:INFO:self._variable_keys: {'log_plots_param', 'y_test', 'fold_generator', 'idx', 'X_test', 'seed', 'fix_imbalance', 'target_param', 'X_train', 'memory', 'gpu_n_jobs_param', 'logging_param', 'USI', 'n_jobs_param', 'pipeline', 'y', 'fold_shuffle_param', 'y_train', '_available_plots', 'exp_name_log', 'data', 'exp_id', 'X', 'gpu_param', 'is_multiclass', 'html_param', 'fold_groups_param', '_ml_usecase'}
2024-04-18 12:20:53,611:INFO:Checking environment
2024-04-18 12:20:53,611:INFO:python_version: 3.9.18
2024-04-18 12:20:53,611:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2024-04-18 12:20:53,611:INFO:machine: AMD64
2024-04-18 12:20:53,611:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-18 12:20:53,614:INFO:Memory: svmem(total=34210226176, available=17777934336, percent=48.0, used=16432291840, free=17777934336)
2024-04-18 12:20:53,614:INFO:Physical Core: 4
2024-04-18 12:20:53,614:INFO:Logical Core: 8
2024-04-18 12:20:53,614:INFO:Checking libraries
2024-04-18 12:20:53,614:INFO:System:
2024-04-18 12:20:53,614:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2024-04-18 12:20:53,614:INFO:executable: c:\Users\stang\miniconda3\envs\tf2\python.exe
2024-04-18 12:20:53,614:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-18 12:20:53,614:INFO:PyCaret required dependencies:
2024-04-18 12:20:53,615:INFO:                 pip: 24.0
2024-04-18 12:20:53,615:INFO:          setuptools: 68.2.2
2024-04-18 12:20:53,615:INFO:             pycaret: 3.3.0
2024-04-18 12:20:53,615:INFO:             IPython: 8.18.1
2024-04-18 12:20:53,615:INFO:          ipywidgets: 8.1.2
2024-04-18 12:20:53,615:INFO:                tqdm: 4.66.2
2024-04-18 12:20:53,615:INFO:               numpy: 1.26.4
2024-04-18 12:20:53,615:INFO:              pandas: 2.1.4
2024-04-18 12:20:53,615:INFO:              jinja2: 3.1.3
2024-04-18 12:20:53,615:INFO:               scipy: 1.11.4
2024-04-18 12:20:53,615:INFO:              joblib: 1.3.2
2024-04-18 12:20:53,615:INFO:             sklearn: 1.4.1.post1
2024-04-18 12:20:53,615:INFO:                pyod: 1.1.3
2024-04-18 12:20:53,615:INFO:            imblearn: 0.12.0
2024-04-18 12:20:53,615:INFO:   category_encoders: 2.6.3
2024-04-18 12:20:53,615:INFO:            lightgbm: 4.3.0
2024-04-18 12:20:53,615:INFO:               numba: 0.59.1
2024-04-18 12:20:53,615:INFO:            requests: 2.31.0
2024-04-18 12:20:53,615:INFO:          matplotlib: 3.8.3
2024-04-18 12:20:53,615:INFO:          scikitplot: 0.3.7
2024-04-18 12:20:53,615:INFO:         yellowbrick: 1.5
2024-04-18 12:20:53,615:INFO:              plotly: 5.20.0
2024-04-18 12:20:53,615:INFO:    plotly-resampler: Not installed
2024-04-18 12:20:53,615:INFO:             kaleido: 0.2.1
2024-04-18 12:20:53,615:INFO:           schemdraw: 0.15
2024-04-18 12:20:53,615:INFO:         statsmodels: 0.14.1
2024-04-18 12:20:53,615:INFO:              sktime: 0.27.0
2024-04-18 12:20:53,615:INFO:               tbats: 1.1.3
2024-04-18 12:20:53,615:INFO:            pmdarima: 2.0.4
2024-04-18 12:20:53,615:INFO:              psutil: 5.9.8
2024-04-18 12:20:53,615:INFO:          markupsafe: 2.1.5
2024-04-18 12:20:53,615:INFO:             pickle5: Not installed
2024-04-18 12:20:53,615:INFO:         cloudpickle: 3.0.0
2024-04-18 12:20:53,615:INFO:         deprecation: 2.1.0
2024-04-18 12:20:53,615:INFO:              xxhash: 3.4.1
2024-04-18 12:20:53,615:INFO:           wurlitzer: Not installed
2024-04-18 12:20:53,615:INFO:PyCaret optional dependencies:
2024-04-18 12:20:53,615:INFO:                shap: Not installed
2024-04-18 12:20:53,615:INFO:           interpret: Not installed
2024-04-18 12:20:53,615:INFO:                umap: Not installed
2024-04-18 12:20:53,615:INFO:     ydata_profiling: Not installed
2024-04-18 12:20:53,615:INFO:  explainerdashboard: Not installed
2024-04-18 12:20:53,615:INFO:             autoviz: Not installed
2024-04-18 12:20:53,615:INFO:           fairlearn: Not installed
2024-04-18 12:20:53,616:INFO:          deepchecks: Not installed
2024-04-18 12:20:53,616:INFO:             xgboost: Not installed
2024-04-18 12:20:53,616:INFO:            catboost: Not installed
2024-04-18 12:20:53,616:INFO:              kmodes: Not installed
2024-04-18 12:20:53,616:INFO:             mlxtend: Not installed
2024-04-18 12:20:53,616:INFO:       statsforecast: Not installed
2024-04-18 12:20:53,616:INFO:        tune_sklearn: Not installed
2024-04-18 12:20:53,616:INFO:                 ray: Not installed
2024-04-18 12:20:53,616:INFO:            hyperopt: Not installed
2024-04-18 12:20:53,616:INFO:              optuna: 3.6.1
2024-04-18 12:20:53,616:INFO:               skopt: Not installed
2024-04-18 12:20:53,616:INFO:              mlflow: Not installed
2024-04-18 12:20:53,616:INFO:              gradio: Not installed
2024-04-18 12:20:53,616:INFO:             fastapi: Not installed
2024-04-18 12:20:53,616:INFO:             uvicorn: Not installed
2024-04-18 12:20:53,616:INFO:              m2cgen: Not installed
2024-04-18 12:20:53,616:INFO:           evidently: Not installed
2024-04-18 12:20:53,616:INFO:               fugue: Not installed
2024-04-18 12:20:53,616:INFO:           streamlit: Not installed
2024-04-18 12:20:53,616:INFO:             prophet: Not installed
2024-04-18 12:20:53,616:INFO:None
2024-04-18 12:20:53,616:INFO:Set up data.
2024-04-18 12:20:53,861:INFO:Set up folding strategy.
2024-04-18 12:20:54,168:INFO:Set up train/test split.
2024-04-18 12:20:54,498:INFO:Set up index.
2024-04-18 12:20:54,502:INFO:Assigning column types.
2024-04-18 12:20:54,706:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-18 12:20:54,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,784:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,801:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-18 12:20:54,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,870:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-18 12:20:54,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,887:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-18 12:20:54,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:54,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:55,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:55,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:20:55,014:INFO:Preparing preprocessing pipeline...
2024-04-18 12:20:55,150:INFO:Set up label encoding.
2024-04-18 12:20:55,150:INFO:Set up simple imputation.
2024-04-18 12:20:55,214:INFO:Set up encoding of categorical features.
2024-04-18 12:20:55,237:INFO:Set up column name cleaning.
2024-04-18 12:20:56,771:INFO:Finished creating preprocessing pipeline.
2024-04-18 12:20:56,782:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\stang\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['400.22778', '400.91116',
                                             '401.59454', '402.27789',
                                             '402.96127', '403.64465',
                                             '404.32803', '405.01138',
                                             '405...
                 TransformerWrapper(exclude=None, include=['SurID'],
                                    transformer=TargetEncoder(cols=['SurID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-18 12:20:56,782:INFO:Creating final display dataframe.
2024-04-18 12:20:59,945:INFO:Setup _display_container:                     Description                                         Value
0                    Session id                                          1234
1                        Target                                        Status
2                   Target type                                    Multiclass
3                Target mapping  Hyperglycemia: 0, Hypoglycemia: 1, Normal: 2
4           Original data shape                                  (2159, 2051)
5        Transformed data shape                                  (2159, 2051)
6   Transformed train set shape                                  (1511, 2051)
7    Transformed test set shape                                   (648, 2051)
8              Numeric features                                          2049
9          Categorical features                                             1
10                   Preprocess                                          True
11              Imputation type                                        simple
12           Numeric imputation                                          mean
13       Categorical imputation                                          mode
14     Maximum one-hot encoding                                            25
15              Encoding method                                          None
16               Fold Generator                                    GroupKFold
17                  Fold Number                                            10
18                     CPU Jobs                                            -1
19                      Use GPU                                         False
20               Log Experiment                                         False
21              Experiment Name                              clf-default-name
22                          USI                                          2751
2024-04-18 12:20:59,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:21:00,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:21:00,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:21:00,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-18 12:21:00,051:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-18 12:21:00,052:INFO:setup() successfully completed in 6.45s...............
2024-04-18 12:21:03,962:INFO:Initializing compare_models()
2024-04-18 12:21:03,962:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, 'include': None, 'exclude': ['lightgbm', 'gbc'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['lightgbm', 'gbc'])
2024-04-18 12:21:03,963:INFO:Checking exceptions
2024-04-18 12:21:04,194:INFO:Preparing display monitor
2024-04-18 12:21:04,210:INFO:Initializing Logistic Regression
2024-04-18 12:21:04,210:INFO:Total runtime is 0.0 minutes
2024-04-18 12:21:04,213:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:04,214:INFO:Initializing create_model()
2024-04-18 12:21:04,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=lr, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:04,214:INFO:Checking exceptions
2024-04-18 12:21:04,215:INFO:Importing libraries
2024-04-18 12:21:04,215:INFO:Copying training dataset
2024-04-18 12:21:04,409:INFO:Defining folds
2024-04-18 12:21:04,409:INFO:Declaring metric variables
2024-04-18 12:21:04,411:INFO:Importing untrained model
2024-04-18 12:21:04,414:INFO:Logistic Regression Imported successfully
2024-04-18 12:21:04,420:INFO:Starting cross validation
2024-04-18 12:21:04,426:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:21:26,136:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:26,140:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:26,145:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:26,148:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,320:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,323:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,327:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:27,328:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,332:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,486:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,493:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,495:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:27,497:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,500:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,652:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,654:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,656:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:27,658:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,661:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,730:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,733:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,736:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,739:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,754:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,759:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,762:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,765:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,985:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:27,988:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,991:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:27,994:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:28,050:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:28,053:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:28,055:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:28,056:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:28,059:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,564:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:32,566:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,568:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,569:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,641:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:32,642:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,644:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,646:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:32,666:INFO:Calculating mean and std
2024-04-18 12:21:32,667:INFO:Creating metrics dataframe
2024-04-18 12:21:32,668:INFO:Uploading results into container
2024-04-18 12:21:32,669:INFO:Uploading model into container now
2024-04-18 12:21:32,669:INFO:_master_model_container: 1
2024-04-18 12:21:32,669:INFO:_display_container: 2
2024-04-18 12:21:32,670:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-18 12:21:32,670:INFO:create_model() successfully completed......................................
2024-04-18 12:21:32,789:INFO:SubProcess create_model() end ==================================
2024-04-18 12:21:32,789:INFO:Creating metrics dataframe
2024-04-18 12:21:32,794:INFO:Initializing K Neighbors Classifier
2024-04-18 12:21:32,794:INFO:Total runtime is 0.47639663219451905 minutes
2024-04-18 12:21:32,796:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:32,797:INFO:Initializing create_model()
2024-04-18 12:21:32,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=knn, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:32,798:INFO:Checking exceptions
2024-04-18 12:21:32,798:INFO:Importing libraries
2024-04-18 12:21:32,798:INFO:Copying training dataset
2024-04-18 12:21:32,987:INFO:Defining folds
2024-04-18 12:21:32,987:INFO:Declaring metric variables
2024-04-18 12:21:32,990:INFO:Importing untrained model
2024-04-18 12:21:32,993:INFO:K Neighbors Classifier Imported successfully
2024-04-18 12:21:32,998:INFO:Starting cross validation
2024-04-18 12:21:33,005:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:21:36,753:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:36,754:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,756:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:36,757:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:36,758:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,760:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,761:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,763:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,766:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,934:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:36,936:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,938:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:36,940:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,943:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,962:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:36,964:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,967:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:36,969:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,099:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:37,100:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,101:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:37,102:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,104:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,132:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:37,133:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,136:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,138:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,168:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:37,169:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,170:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:37,171:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,172:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,199:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:37,200:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,201:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:37,203:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,508:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:38,509:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,511:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,513:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,583:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:38,585:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,586:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,588:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:38,598:INFO:Calculating mean and std
2024-04-18 12:21:38,599:INFO:Creating metrics dataframe
2024-04-18 12:21:38,600:INFO:Uploading results into container
2024-04-18 12:21:38,601:INFO:Uploading model into container now
2024-04-18 12:21:38,601:INFO:_master_model_container: 2
2024-04-18 12:21:38,601:INFO:_display_container: 2
2024-04-18 12:21:38,602:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-18 12:21:38,602:INFO:create_model() successfully completed......................................
2024-04-18 12:21:38,719:INFO:SubProcess create_model() end ==================================
2024-04-18 12:21:38,719:INFO:Creating metrics dataframe
2024-04-18 12:21:38,725:INFO:Initializing Naive Bayes
2024-04-18 12:21:38,725:INFO:Total runtime is 0.5752411405245463 minutes
2024-04-18 12:21:38,727:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:38,729:INFO:Initializing create_model()
2024-04-18 12:21:38,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=nb, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:38,729:INFO:Checking exceptions
2024-04-18 12:21:38,729:INFO:Importing libraries
2024-04-18 12:21:38,729:INFO:Copying training dataset
2024-04-18 12:21:38,914:INFO:Defining folds
2024-04-18 12:21:38,914:INFO:Declaring metric variables
2024-04-18 12:21:38,916:INFO:Importing untrained model
2024-04-18 12:21:38,919:INFO:Naive Bayes Imported successfully
2024-04-18 12:21:38,924:INFO:Starting cross validation
2024-04-18 12:21:38,931:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:21:42,219:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,220:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,223:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,227:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,385:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,387:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,388:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:42,391:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,394:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,521:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,523:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,524:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:42,526:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,529:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,598:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,599:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,601:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:42,602:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,605:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,684:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,685:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,687:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,690:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,730:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,732:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,734:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,736:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,773:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,775:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,776:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:42,778:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,780:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,805:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:42,806:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,809:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:42,811:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,063:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:44,064:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,066:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,068:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,124:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:44,126:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,128:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,130:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:44,145:INFO:Calculating mean and std
2024-04-18 12:21:44,146:INFO:Creating metrics dataframe
2024-04-18 12:21:44,148:INFO:Uploading results into container
2024-04-18 12:21:44,148:INFO:Uploading model into container now
2024-04-18 12:21:44,149:INFO:_master_model_container: 3
2024-04-18 12:21:44,149:INFO:_display_container: 2
2024-04-18 12:21:44,149:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-18 12:21:44,150:INFO:create_model() successfully completed......................................
2024-04-18 12:21:44,268:INFO:SubProcess create_model() end ==================================
2024-04-18 12:21:44,268:INFO:Creating metrics dataframe
2024-04-18 12:21:44,273:INFO:Initializing Decision Tree Classifier
2024-04-18 12:21:44,273:INFO:Total runtime is 0.6677088538805644 minutes
2024-04-18 12:21:44,278:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:44,279:INFO:Initializing create_model()
2024-04-18 12:21:44,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=dt, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:44,279:INFO:Checking exceptions
2024-04-18 12:21:44,280:INFO:Importing libraries
2024-04-18 12:21:44,280:INFO:Copying training dataset
2024-04-18 12:21:44,470:INFO:Defining folds
2024-04-18 12:21:44,471:INFO:Declaring metric variables
2024-04-18 12:21:44,473:INFO:Importing untrained model
2024-04-18 12:21:44,477:INFO:Decision Tree Classifier Imported successfully
2024-04-18 12:21:44,481:INFO:Starting cross validation
2024-04-18 12:21:44,488:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:21:48,370:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,371:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,375:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,377:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,378:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,480:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,482:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,483:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,485:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,486:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,488:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,588:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,589:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,592:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,593:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,595:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,596:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,598:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,709:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,711:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,713:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,715:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,716:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,718:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,719:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,810:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,811:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,813:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,815:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,816:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,845:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,847:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,849:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,850:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,852:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,967:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,968:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,969:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,970:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,971:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,973:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,974:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,975:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:48,976:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,978:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:48,979:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:48,980:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,611:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:50,612:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,614:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,615:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:50,615:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:21:50,616:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,617:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,619:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,620:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:50,621:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:50,632:INFO:Calculating mean and std
2024-04-18 12:21:50,633:INFO:Creating metrics dataframe
2024-04-18 12:21:50,634:INFO:Uploading results into container
2024-04-18 12:21:50,635:INFO:Uploading model into container now
2024-04-18 12:21:50,635:INFO:_master_model_container: 4
2024-04-18 12:21:50,636:INFO:_display_container: 2
2024-04-18 12:21:50,636:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-04-18 12:21:50,636:INFO:create_model() successfully completed......................................
2024-04-18 12:21:50,751:INFO:SubProcess create_model() end ==================================
2024-04-18 12:21:50,751:INFO:Creating metrics dataframe
2024-04-18 12:21:50,756:INFO:Initializing SVM - Linear Kernel
2024-04-18 12:21:50,756:INFO:Total runtime is 0.775758703549703 minutes
2024-04-18 12:21:50,759:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:50,760:INFO:Initializing create_model()
2024-04-18 12:21:50,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=svm, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:50,761:INFO:Checking exceptions
2024-04-18 12:21:50,761:INFO:Importing libraries
2024-04-18 12:21:50,761:INFO:Copying training dataset
2024-04-18 12:21:50,962:INFO:Defining folds
2024-04-18 12:21:50,963:INFO:Declaring metric variables
2024-04-18 12:21:50,965:INFO:Importing untrained model
2024-04-18 12:21:50,969:INFO:SVM - Linear Kernel Imported successfully
2024-04-18 12:21:50,973:INFO:Starting cross validation
2024-04-18 12:21:50,979:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:21:54,776:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:54,778:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:54,781:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:54,784:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,012:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,013:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,016:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:55,019:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,022:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,226:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,228:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,230:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:55,231:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,234:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,347:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,348:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,349:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:55,351:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,354:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,419:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,420:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,421:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,421:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,423:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,424:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,425:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:55,426:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,426:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,524:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,526:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,527:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:21:55,528:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,529:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,543:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:55,544:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,546:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:55,548:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:56,895:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:56,896:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:56,898:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:56,899:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:57,036:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:21:57,037:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:57,039:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:57,040:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:21:57,049:INFO:Calculating mean and std
2024-04-18 12:21:57,050:INFO:Creating metrics dataframe
2024-04-18 12:21:57,051:INFO:Uploading results into container
2024-04-18 12:21:57,052:INFO:Uploading model into container now
2024-04-18 12:21:57,052:INFO:_master_model_container: 5
2024-04-18 12:21:57,052:INFO:_display_container: 2
2024-04-18 12:21:57,052:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-18 12:21:57,053:INFO:create_model() successfully completed......................................
2024-04-18 12:21:57,165:INFO:SubProcess create_model() end ==================================
2024-04-18 12:21:57,166:INFO:Creating metrics dataframe
2024-04-18 12:21:57,171:INFO:Initializing Ridge Classifier
2024-04-18 12:21:57,171:INFO:Total runtime is 0.8826763709386191 minutes
2024-04-18 12:21:57,173:INFO:SubProcess create_model() called ==================================
2024-04-18 12:21:57,174:INFO:Initializing create_model()
2024-04-18 12:21:57,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=ridge, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:21:57,174:INFO:Checking exceptions
2024-04-18 12:21:57,175:INFO:Importing libraries
2024-04-18 12:21:57,175:INFO:Copying training dataset
2024-04-18 12:21:57,362:INFO:Defining folds
2024-04-18 12:21:57,363:INFO:Declaring metric variables
2024-04-18 12:21:57,366:INFO:Importing untrained model
2024-04-18 12:21:57,368:INFO:Ridge Classifier Imported successfully
2024-04-18 12:21:57,373:INFO:Starting cross validation
2024-04-18 12:21:57,379:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:22:00,853:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:00,855:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:00,858:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:00,861:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,014:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,016:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,017:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:01,018:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,021:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,053:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,054:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,056:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:01,058:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,062:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,183:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,185:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,186:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:01,187:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,191:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,285:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,286:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,289:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,290:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:01,292:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,322:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,324:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,326:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,328:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,377:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,378:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,379:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:01,380:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,382:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,416:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:01,417:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,420:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:01,422:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,743:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:02,744:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,747:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,750:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,828:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-18 12:22:02,829:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,831:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,833:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:02,848:INFO:Calculating mean and std
2024-04-18 12:22:02,849:INFO:Creating metrics dataframe
2024-04-18 12:22:02,850:INFO:Uploading results into container
2024-04-18 12:22:02,851:INFO:Uploading model into container now
2024-04-18 12:22:02,851:INFO:_master_model_container: 6
2024-04-18 12:22:02,851:INFO:_display_container: 2
2024-04-18 12:22:02,851:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-04-18 12:22:02,851:INFO:create_model() successfully completed......................................
2024-04-18 12:22:02,969:INFO:SubProcess create_model() end ==================================
2024-04-18 12:22:02,969:INFO:Creating metrics dataframe
2024-04-18 12:22:02,977:INFO:Initializing Random Forest Classifier
2024-04-18 12:22:02,977:INFO:Total runtime is 0.9794478933016459 minutes
2024-04-18 12:22:02,979:INFO:SubProcess create_model() called ==================================
2024-04-18 12:22:02,981:INFO:Initializing create_model()
2024-04-18 12:22:02,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=rf, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:22:02,981:INFO:Checking exceptions
2024-04-18 12:22:02,982:INFO:Importing libraries
2024-04-18 12:22:02,982:INFO:Copying training dataset
2024-04-18 12:22:03,171:INFO:Defining folds
2024-04-18 12:22:03,172:INFO:Declaring metric variables
2024-04-18 12:22:03,175:INFO:Importing untrained model
2024-04-18 12:22:03,179:INFO:Random Forest Classifier Imported successfully
2024-04-18 12:22:03,184:INFO:Starting cross validation
2024-04-18 12:22:03,190:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:22:10,720:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:10,721:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:10,724:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:10,727:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,207:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,209:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,210:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:11,212:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,214:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,301:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,302:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,304:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:11,305:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,308:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,557:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,559:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,560:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:11,562:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,564:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,605:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,607:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,609:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,612:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,748:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,749:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,749:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,750:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,751:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:11,752:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,753:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,755:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,755:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,764:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:11,765:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,768:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:11,770:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:13,937:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:13,938:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:13,940:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:13,943:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:14,129:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:14,130:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:14,132:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:14,134:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:14,155:INFO:Calculating mean and std
2024-04-18 12:22:14,159:INFO:Creating metrics dataframe
2024-04-18 12:22:14,161:INFO:Uploading results into container
2024-04-18 12:22:14,162:INFO:Uploading model into container now
2024-04-18 12:22:14,162:INFO:_master_model_container: 7
2024-04-18 12:22:14,162:INFO:_display_container: 2
2024-04-18 12:22:14,163:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-04-18 12:22:14,163:INFO:create_model() successfully completed......................................
2024-04-18 12:22:14,280:INFO:SubProcess create_model() end ==================================
2024-04-18 12:22:14,280:INFO:Creating metrics dataframe
2024-04-18 12:22:14,285:INFO:Initializing Quadratic Discriminant Analysis
2024-04-18 12:22:14,285:INFO:Total runtime is 1.1679202437400817 minutes
2024-04-18 12:22:14,287:INFO:SubProcess create_model() called ==================================
2024-04-18 12:22:14,288:INFO:Initializing create_model()
2024-04-18 12:22:14,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=qda, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:22:14,288:INFO:Checking exceptions
2024-04-18 12:22:14,288:INFO:Importing libraries
2024-04-18 12:22:14,288:INFO:Copying training dataset
2024-04-18 12:22:14,475:INFO:Defining folds
2024-04-18 12:22:14,475:INFO:Declaring metric variables
2024-04-18 12:22:14,478:INFO:Importing untrained model
2024-04-18 12:22:14,481:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-18 12:22:14,485:INFO:Starting cross validation
2024-04-18 12:22:14,492:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:22:16,339:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:16,453:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:16,852:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:17,048:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:17,282:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:17,343:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:17,748:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:17,869:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:19,063:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:19,064:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,067:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,070:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,436:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:19,437:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,439:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:19,440:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,443:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,895:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:19,897:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,899:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:19,900:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,902:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,968:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:19,970:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,971:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:19,972:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:19,975:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,100:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:20,102:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,105:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,108:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,155:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:20,157:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,160:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,161:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:20,162:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,230:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:20,231:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,233:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,235:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,271:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:20,272:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,274:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:20,275:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,277:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:20,617:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:20,794:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-18 12:22:21,807:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:21,808:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,810:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,811:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:21,812:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,932:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:21,934:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,935:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,937:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:21,946:INFO:Calculating mean and std
2024-04-18 12:22:21,947:INFO:Creating metrics dataframe
2024-04-18 12:22:21,948:INFO:Uploading results into container
2024-04-18 12:22:21,949:INFO:Uploading model into container now
2024-04-18 12:22:21,949:INFO:_master_model_container: 8
2024-04-18 12:22:21,949:INFO:_display_container: 2
2024-04-18 12:22:21,950:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-18 12:22:21,950:INFO:create_model() successfully completed......................................
2024-04-18 12:22:22,064:INFO:SubProcess create_model() end ==================================
2024-04-18 12:22:22,064:INFO:Creating metrics dataframe
2024-04-18 12:22:22,070:INFO:Initializing Ada Boost Classifier
2024-04-18 12:22:22,070:INFO:Total runtime is 1.2976634780565897 minutes
2024-04-18 12:22:22,072:INFO:SubProcess create_model() called ==================================
2024-04-18 12:22:22,073:INFO:Initializing create_model()
2024-04-18 12:22:22,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=ada, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:22:22,074:INFO:Checking exceptions
2024-04-18 12:22:22,074:INFO:Importing libraries
2024-04-18 12:22:22,074:INFO:Copying training dataset
2024-04-18 12:22:22,260:INFO:Defining folds
2024-04-18 12:22:22,260:INFO:Declaring metric variables
2024-04-18 12:22:22,263:INFO:Importing untrained model
2024-04-18 12:22:22,266:INFO:Ada Boost Classifier Imported successfully
2024-04-18 12:22:22,270:INFO:Starting cross validation
2024-04-18 12:22:22,280:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:22:24,037:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,151:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,218:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,313:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,471:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,534:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,587:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:24,670:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:46,215:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,216:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,218:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,219:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,221:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,223:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,225:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,387:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,389:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,391:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,393:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,394:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,396:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,397:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,412:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,413:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,415:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,417:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,418:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,420:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,557:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,559:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,561:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,563:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,564:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,667:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,669:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,672:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,674:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,675:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,683:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,685:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,687:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,689:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,691:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,931:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,933:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,936:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,937:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,939:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,954:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:22:46,956:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,957:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,959:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,959:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:46,961:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:22:46,962:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:22:47,458:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:22:47,549:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-18 12:23:03,829:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:03,830:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,832:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,832:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:03,833:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,917:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:03,918:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,919:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,920:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:03,921:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:03,930:INFO:Calculating mean and std
2024-04-18 12:23:03,931:INFO:Creating metrics dataframe
2024-04-18 12:23:03,932:INFO:Uploading results into container
2024-04-18 12:23:03,932:INFO:Uploading model into container now
2024-04-18 12:23:03,933:INFO:_master_model_container: 9
2024-04-18 12:23:03,933:INFO:_display_container: 2
2024-04-18 12:23:03,933:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-04-18 12:23:03,933:INFO:create_model() successfully completed......................................
2024-04-18 12:23:04,046:INFO:SubProcess create_model() end ==================================
2024-04-18 12:23:04,046:INFO:Creating metrics dataframe
2024-04-18 12:23:04,052:INFO:Initializing Linear Discriminant Analysis
2024-04-18 12:23:04,052:INFO:Total runtime is 1.9973620096842448 minutes
2024-04-18 12:23:04,054:INFO:SubProcess create_model() called ==================================
2024-04-18 12:23:04,055:INFO:Initializing create_model()
2024-04-18 12:23:04,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=lda, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:23:04,056:INFO:Checking exceptions
2024-04-18 12:23:04,056:INFO:Importing libraries
2024-04-18 12:23:04,056:INFO:Copying training dataset
2024-04-18 12:23:04,249:INFO:Defining folds
2024-04-18 12:23:04,249:INFO:Declaring metric variables
2024-04-18 12:23:04,252:INFO:Importing untrained model
2024-04-18 12:23:04,254:INFO:Linear Discriminant Analysis Imported successfully
2024-04-18 12:23:04,259:INFO:Starting cross validation
2024-04-18 12:23:04,265:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:23:14,389:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:14,391:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:14,393:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:14,396:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:14,765:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:14,767:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:14,768:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:14,770:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:14,774:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,017:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,019:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,020:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:15,022:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,025:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,333:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,335:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,336:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:15,338:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,341:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,368:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,370:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,371:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:15,373:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,376:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,416:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,417:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,419:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,421:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,434:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,436:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,438:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,441:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,480:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:15,481:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,483:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:15,484:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,307:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:18,308:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,310:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,311:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,467:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:18,468:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,469:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,471:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:18,479:INFO:Calculating mean and std
2024-04-18 12:23:18,480:INFO:Creating metrics dataframe
2024-04-18 12:23:18,482:INFO:Uploading results into container
2024-04-18 12:23:18,482:INFO:Uploading model into container now
2024-04-18 12:23:18,482:INFO:_master_model_container: 10
2024-04-18 12:23:18,482:INFO:_display_container: 2
2024-04-18 12:23:18,483:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-18 12:23:18,483:INFO:create_model() successfully completed......................................
2024-04-18 12:23:18,595:INFO:SubProcess create_model() end ==================================
2024-04-18 12:23:18,595:INFO:Creating metrics dataframe
2024-04-18 12:23:18,601:INFO:Initializing Extra Trees Classifier
2024-04-18 12:23:18,601:INFO:Total runtime is 2.239849285284678 minutes
2024-04-18 12:23:18,603:INFO:SubProcess create_model() called ==================================
2024-04-18 12:23:18,605:INFO:Initializing create_model()
2024-04-18 12:23:18,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=et, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:23:18,605:INFO:Checking exceptions
2024-04-18 12:23:18,605:INFO:Importing libraries
2024-04-18 12:23:18,605:INFO:Copying training dataset
2024-04-18 12:23:18,794:INFO:Defining folds
2024-04-18 12:23:18,795:INFO:Declaring metric variables
2024-04-18 12:23:18,797:INFO:Importing untrained model
2024-04-18 12:23:18,800:INFO:Extra Trees Classifier Imported successfully
2024-04-18 12:23:18,804:INFO:Starting cross validation
2024-04-18 12:23:18,811:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:23:22,875:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:22,877:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:22,880:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:22,882:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,015:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,016:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,018:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:23,019:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,022:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,186:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,188:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,189:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:23,191:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,194:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,247:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,249:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,250:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:23,252:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,255:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,295:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,296:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,299:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,302:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,342:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,343:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,345:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,346:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,470:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,471:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,473:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:23,474:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,477:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,517:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:23,518:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,520:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:23,522:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,905:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:24,906:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,909:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,912:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,968:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:24,969:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,971:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,974:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:24,980:INFO:Calculating mean and std
2024-04-18 12:23:24,981:INFO:Creating metrics dataframe
2024-04-18 12:23:24,983:INFO:Uploading results into container
2024-04-18 12:23:24,984:INFO:Uploading model into container now
2024-04-18 12:23:24,985:INFO:_master_model_container: 11
2024-04-18 12:23:24,985:INFO:_display_container: 2
2024-04-18 12:23:24,985:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:23:24,985:INFO:create_model() successfully completed......................................
2024-04-18 12:23:25,100:INFO:SubProcess create_model() end ==================================
2024-04-18 12:23:25,101:INFO:Creating metrics dataframe
2024-04-18 12:23:25,108:INFO:Initializing Dummy Classifier
2024-04-18 12:23:25,108:INFO:Total runtime is 2.3483030915260312 minutes
2024-04-18 12:23:25,111:INFO:SubProcess create_model() called ==================================
2024-04-18 12:23:25,112:INFO:Initializing create_model()
2024-04-18 12:23:25,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=dummy, fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A2ACF38E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:23:25,112:INFO:Checking exceptions
2024-04-18 12:23:25,112:INFO:Importing libraries
2024-04-18 12:23:25,112:INFO:Copying training dataset
2024-04-18 12:23:25,303:INFO:Defining folds
2024-04-18 12:23:25,303:INFO:Declaring metric variables
2024-04-18 12:23:25,307:INFO:Importing untrained model
2024-04-18 12:23:25,311:INFO:Dummy Classifier Imported successfully
2024-04-18 12:23:25,316:INFO:Starting cross validation
2024-04-18 12:23:25,323:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:23:28,529:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:28,531:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,534:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,535:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,536:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,590:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:28,593:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,594:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,596:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,598:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,599:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,843:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:28,846:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,847:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,849:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,850:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,852:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,853:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,862:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:28,864:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,866:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,867:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,869:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,870:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:28,871:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:28,996:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:28,998:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,001:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

om metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:29,002:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,003:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,004:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,005:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,007:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,009:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,037:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:29,038:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,040:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,042:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,044:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,045:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,046:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,107:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:29,109:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,112:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:29,113:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:29,114:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,270:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:30,271:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,273:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,274:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:30,275:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,330:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:23:30,331:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,333:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,333:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:23:30,334:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:23:30,352:INFO:Calculating mean and std
2024-04-18 12:23:30,353:INFO:Creating metrics dataframe
2024-04-18 12:23:30,354:INFO:Uploading results into container
2024-04-18 12:23:30,355:INFO:Uploading model into container now
2024-04-18 12:23:30,355:INFO:_master_model_container: 12
2024-04-18 12:23:30,356:INFO:_display_container: 2
2024-04-18 12:23:30,357:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-04-18 12:23:30,357:INFO:create_model() successfully completed......................................
2024-04-18 12:23:30,474:INFO:SubProcess create_model() end ==================================
2024-04-18 12:23:30,474:INFO:Creating metrics dataframe
2024-04-18 12:23:30,482:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-18 12:23:30,488:INFO:Initializing create_model()
2024-04-18 12:23:30,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=GroupKFold(n_splits=10), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:23:30,489:INFO:Checking exceptions
2024-04-18 12:23:30,491:INFO:Importing libraries
2024-04-18 12:23:30,491:INFO:Copying training dataset
2024-04-18 12:23:30,678:INFO:Defining folds
2024-04-18 12:23:30,678:INFO:Declaring metric variables
2024-04-18 12:23:30,678:INFO:Importing untrained model
2024-04-18 12:23:30,678:INFO:Declaring custom model
2024-04-18 12:23:30,679:INFO:Extra Trees Classifier Imported successfully
2024-04-18 12:23:30,684:INFO:Cross validation set to False
2024-04-18 12:23:30,684:INFO:Fitting Model
2024-04-18 12:23:31,614:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:23:31,614:INFO:create_model() successfully completed......................................
2024-04-18 12:23:31,744:INFO:_master_model_container: 12
2024-04-18 12:23:31,744:INFO:_display_container: 2
2024-04-18 12:23:31,744:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:23:31,744:INFO:compare_models() successfully completed......................................
2024-04-18 12:23:37,535:INFO:Initializing tune_model()
2024-04-18 12:23:37,535:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>)
2024-04-18 12:23:37,535:INFO:Checking exceptions
2024-04-18 12:23:37,616:INFO:Copying training dataset
2024-04-18 12:23:37,742:INFO:Checking base model
2024-04-18 12:23:37,743:INFO:Base model : Extra Trees Classifier
2024-04-18 12:23:37,745:INFO:Declaring metric variables
2024-04-18 12:23:37,747:INFO:Defining Hyperparameters
2024-04-18 12:23:37,865:INFO:Tuning with n_jobs=-1
2024-04-18 12:23:37,865:INFO:Initializing RandomizedSearchCV
2024-04-18 12:24:35,457:INFO:best_params: {'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2024-04-18 12:24:35,457:INFO:Hyperparameter search completed
2024-04-18 12:24:35,457:INFO:SubProcess create_model() called ==================================
2024-04-18 12:24:35,459:INFO:Initializing create_model()
2024-04-18 12:24:35,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017A02C5F700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 140, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'entropy', 'class_weight': 'balanced', 'bootstrap': False})
2024-04-18 12:24:35,459:INFO:Checking exceptions
2024-04-18 12:24:35,459:INFO:Importing libraries
2024-04-18 12:24:35,460:INFO:Copying training dataset
2024-04-18 12:24:35,638:INFO:Defining folds
2024-04-18 12:24:35,638:INFO:Declaring metric variables
2024-04-18 12:24:35,641:INFO:Importing untrained model
2024-04-18 12:24:35,641:INFO:Declaring custom model
2024-04-18 12:24:35,644:INFO:Extra Trees Classifier Imported successfully
2024-04-18 12:24:35,648:INFO:Starting cross validation
2024-04-18 12:24:35,656:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:24:39,906:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:39,908:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:39,910:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:39,913:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,127:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:40,129:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,129:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,130:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:40,132:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,130:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:40,134:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,135:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,138:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,206:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:40,207:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,207:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,209:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:40,211:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,211:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,214:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,214:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,300:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:40,302:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,304:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,307:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,411:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:40,412:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,413:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:40,414:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,416:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,427:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:40,428:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,430:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:40,432:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:41,871:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:41,873:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:41,875:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:41,876:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:41,998:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:41,999:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:42,001:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:42,003:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:42,010:INFO:Calculating mean and std
2024-04-18 12:24:42,011:INFO:Creating metrics dataframe
2024-04-18 12:24:42,015:INFO:Finalizing model
2024-04-18 12:24:42,916:INFO:Uploading results into container
2024-04-18 12:24:42,917:INFO:Uploading model into container now
2024-04-18 12:24:42,917:INFO:_master_model_container: 13
2024-04-18 12:24:42,918:INFO:_display_container: 3
2024-04-18 12:24:42,918:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.001, min_samples_leaf=6,
                     min_samples_split=10, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=140, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:24:42,918:INFO:create_model() successfully completed......................................
2024-04-18 12:24:43,034:INFO:SubProcess create_model() end ==================================
2024-04-18 12:24:43,035:INFO:choose_better activated
2024-04-18 12:24:43,037:INFO:SubProcess create_model() called ==================================
2024-04-18 12:24:43,038:INFO:Initializing create_model()
2024-04-18 12:24:43,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017A1CF71DC0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=GroupKFold(n_splits=10), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=SpecID
210526-2-35    210526-2
210318-2-14    210318-2
210428-3-22    210428-3
210510-1-12    210510-1
210407-1-21    210407-1
                 ...   
201210-1-24    201210-1
201210-2-28    201210-2
210218-1-21    210218-1
201210-1-32    201210-1
201210-2-11    201210-2
Name: SurID, Length: 1511, dtype: category
Categories (63, object): ['201210-1', '201210-2', '210114-1', '210114-2', ..., '210524-1', '210526-1', '210526-2', '210526-3'], refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-18 12:24:43,039:INFO:Checking exceptions
2024-04-18 12:24:43,040:INFO:Importing libraries
2024-04-18 12:24:43,040:INFO:Copying training dataset
2024-04-18 12:24:43,214:INFO:Defining folds
2024-04-18 12:24:43,214:INFO:Declaring metric variables
2024-04-18 12:24:43,214:INFO:Importing untrained model
2024-04-18 12:24:43,214:INFO:Declaring custom model
2024-04-18 12:24:43,214:INFO:Extra Trees Classifier Imported successfully
2024-04-18 12:24:43,215:INFO:Starting cross validation
2024-04-18 12:24:43,220:INFO:Cross validating with GroupKFold(n_splits=10), n_jobs=-1
2024-04-18 12:24:47,331:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,332:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,335:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,338:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,536:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,538:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,540:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:47,541:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,545:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,648:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,650:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,651:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:47,653:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,656:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,680:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,682:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,683:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:47,684:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,687:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,759:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,761:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,764:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,766:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,790:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,791:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,793:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,795:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,914:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,916:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,917:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,919:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,932:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:47,933:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,935:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-18 12:24:47,936:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:47,938:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,425:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:49,426:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,428:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,429:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,534:WARNING:C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\stang\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-18 12:24:49,535:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,537:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,539:WARNING:c:\Users\stang\miniconda3\envs\tf2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-18 12:24:49,546:INFO:Calculating mean and std
2024-04-18 12:24:49,546:INFO:Creating metrics dataframe
2024-04-18 12:24:49,548:INFO:Finalizing model
2024-04-18 12:24:50,443:INFO:Uploading results into container
2024-04-18 12:24:50,443:INFO:Uploading model into container now
2024-04-18 12:24:50,443:INFO:_master_model_container: 14
2024-04-18 12:24:50,443:INFO:_display_container: 4
2024-04-18 12:24:50,444:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:24:50,444:INFO:create_model() successfully completed......................................
2024-04-18 12:24:50,556:INFO:SubProcess create_model() end ==================================
2024-04-18 12:24:50,556:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False) result for Accuracy is 0.6205
2024-04-18 12:24:50,557:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.001, min_samples_leaf=6,
                     min_samples_split=10, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=140, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False) result for Accuracy is 0.6474
2024-04-18 12:24:50,557:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.001, min_samples_leaf=6,
                     min_samples_split=10, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=140, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False) is best model
2024-04-18 12:24:50,557:INFO:choose_better completed
2024-04-18 12:24:50,563:INFO:_master_model_container: 14
2024-04-18 12:24:50,563:INFO:_display_container: 3
2024-04-18 12:24:50,564:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.001, min_samples_leaf=6,
                     min_samples_split=10, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=140, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-04-18 12:24:50,564:INFO:tune_model() successfully completed......................................
